[{"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/index.tsx":"1","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/reportWebVitals.ts":"2","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/App.tsx":"3","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/services/socketService.ts":"4","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/services/gameService.ts":"5","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/shared/types/socketExceptions.ts":"6","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/shared/types/clientEvents.ts":"7","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/shared/types/serverEvents.ts":"8","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameStateType.ts":"9","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/joinRoom/joinRoom.tsx":"10","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/game/game.tsx":"11","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/waitingRoom/waitingRoom.tsx":"12","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameRoom/gameRoom.tsx":"13","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameTable/gameTable.tsx":"14","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gamePlayers/gamePlayers.tsx":"15","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameControlBar/gameControlBar.tsx":"16","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameChat/gameChat.tsx":"17"},{"size":668,"mtime":1696542445749,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1695422561666,"results":"20","hashOfConfig":"19"},{"size":1433,"mtime":1696535994991,"results":"21","hashOfConfig":"19"},{"size":637,"mtime":1695679645661,"results":"22","hashOfConfig":"19"},{"size":2046,"mtime":1696526080742,"results":"23","hashOfConfig":"19"},{"size":251,"mtime":1696007707447,"results":"24","hashOfConfig":"19"},{"size":236,"mtime":1696007707443,"results":"25","hashOfConfig":"19"},{"size":283,"mtime":1696007707445,"results":"26","hashOfConfig":"19"},{"size":300,"mtime":1696359458072,"results":"27","hashOfConfig":"19"},{"size":4342,"mtime":1696537791989,"results":"28","hashOfConfig":"19"},{"size":1058,"mtime":1696528414266,"results":"29","hashOfConfig":"19"},{"size":1019,"mtime":1696467925563,"results":"30","hashOfConfig":"19"},{"size":920,"mtime":1696494859271,"results":"31","hashOfConfig":"19"},{"size":2846,"mtime":1696629651911,"results":"32","hashOfConfig":"19"},{"size":742,"mtime":1696621270178,"results":"33","hashOfConfig":"19"},{"size":1675,"mtime":1696621773457,"results":"34","hashOfConfig":"19"},{"size":310,"mtime":1696535229146,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"vvvibh",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"39"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"39"},"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/index.tsx",[],[],["95"],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/reportWebVitals.ts",[],[],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/App.tsx",["96","97"],[],"import { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport './App.css';\nimport socketService from './services/socketService';\nimport { JoinRoom } from './components/joinRoom/joinRoom';\nimport { Game } from './components/game/game/game';\nimport gameService from './services/gameService';\nimport { CurrentLobbyState } from './components/game/gameStateType';\n\nfunction App() {\n  const [gameState, setGameState] = useRecoilState(CurrentLobbyState);\n\n\n  const connectSocket = async () => {\n    const socket = await socketService\n      .connect(\"http://localhost:9000\")\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  const handleGameUpdate = () => {\n    if (socketService.socket) {\n      gameService.onGameUpdate(socketService.socket, (data) => {\n        setGameState(data);\n      });\n    }\n  }\n\n  const removeGameUpdate = () => {\n    if (socketService.socket) {\n      gameService.offGameUpdate(socketService.socket, () => {});\n    }\n  }\n  \n\n  useEffect(() => {\n    // window.onbeforeunload = function(event)\n    // {\n    //     return window.confirm(\"Confirm refresh\");\n    // };\n\n    if (!socketService.socket) {\n      connectSocket();\n    }\n      \n    handleGameUpdate();\n\n    return () => {\n      removeGameUpdate();\n    }\n  }, []);\n\n  return (\n    <div id=\"app\">\n      {gameState === null ? \n        <JoinRoom /> : \n        <Game />}\n    </div>\n    \n  );\n}\n\nexport default App;\n","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/services/socketService.ts",["98"],[],"import { io, Socket } from \"socket.io-client\";\nimport { DefaultEventsMap } from '@socket.io/component-emitter';\n\nclass SocketService {\n  public socket: Socket | null = null;\n\n  public connect(url: string): Promise<Socket<DefaultEventsMap, DefaultEventsMap>> {\n    return new Promise((rs, rj) => {\n      this.socket = io(url);\n\n      if (!this.socket)\n        return rj();\n\n      this.socket.on(\"connect\", () => {\n        rs(this.socket as Socket);\n      });\n\n      this.socket.on(\"connect_error\", (err) => {\n        console.log(\"Connection error: \", err);\n        rj(err);\n      })\n    });\n\n  }\n\n  \n}\n\nexport default new SocketService();","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/services/gameService.ts",["99"],[],"import { Socket } from \"socket.io-client\";\nimport { ClientEvents } from \"../shared/types/clientEvents\";\nimport { ServerEvents } from \"../shared/types/serverEvents\";\nimport { ServerPayloads } from \"../shared/types/serverPayloads\";\nimport { SocketExceptions } from \"../shared/types/socketExceptions\";\n\nclass GameService {\n  public async createGameRoom(socket: Socket, roomId: string, userName: string, numPlayers: number): Promise<boolean> {\n    return new Promise((rs, rj) => {\n      socket.emit(ClientEvents.LobbyCreate, { roomId: roomId, userName: userName, numPlayers: numPlayers });\n      socket.on(ServerEvents.LobbyCreated, () => {\n        rs(true);\n      });\n      socket.on(SocketExceptions.LobbyError, ({ error }) => rj(error));\n    });\n  }\n\n  public async joinGameRoom(socket: Socket, roomId: string, userName: string): Promise<boolean> {\n    return new Promise((rs, rj) => {\n      socket.emit(ClientEvents.LobbyJoin, { roomId: roomId, userName: userName });\n      socket.on(ServerEvents.LobbyJoined, () => {\n        rs(true);\n      });\n      socket.on(SocketExceptions.LobbyError, ({ error }) => rj(error));\n    });\n  }\n\n  public async updateGame(socket: Socket, choice: string){\n    socket.emit(ClientEvents.GameUpdate, { choice: choice });\n  }\n\n  public async onGameUpdate(socket: Socket, listener: (data: ServerPayloads[ServerEvents.LobbyState]) => void) {\n    socket.on(ServerEvents.LobbyState, ( data ) => {\n      listener(data);\n    });\n  }\n\n  public async onGameMessage(socket: Socket, listener: (data: ServerPayloads[ServerEvents.GameMessage]) => void) {\n    socket.on(ServerEvents.GameMessage, ( data ) => {\n      listener(data);\n    });\n  }\n\n\n  public async offGameUpdate(socket: Socket, listener: (data: ServerPayloads[ServerEvents.LobbyState]) => void) {\n    socket.off(ServerEvents.LobbyState, listener);\n  }\n\n  public async offGameMessage(socket: Socket, listener: (data: ServerPayloads[ServerEvents.GameMessage]) => void) {\n    socket.off(ServerEvents.GameMessage, listener);\n  }\n\n\n\n\n}\n\n\nexport default new GameService();","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/shared/types/socketExceptions.ts",[],[],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/shared/types/clientEvents.ts",[],[],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/shared/types/serverEvents.ts",[],[],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameStateType.ts",[],[],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/joinRoom/joinRoom.tsx",["100","101"],[],"import React, { useState } from \"react\";\nimport socketService from \"../../services/socketService\";\nimport gameService from \"../../services/gameService\";\nimport './joinRoom.css';\n\ninterface IJoinRoomProps {}\n\nexport function JoinRoom(props: IJoinRoomProps) {\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [numPlayers, setNumPlayers] = useState(2);\n  const [isJoining, setJoining] = useState(false);\n  const [isCreator, setCreator] = useState(true);\n  const [isSelected, setSelected] = useState(false);\n\n  const handleRoomNameChange = (e: React.ChangeEvent<any>) => {\n    const value = e.target.value;\n    setRoomName(value);\n  }\n\n  const handleUserNameChange = (e: React.ChangeEvent<any>) => {\n    const value = e.target.value;\n    setUserName(value);\n  }\n\n  const handleNumPlayersChange = (e: React.ChangeEvent<any>) => {\n    const value = e.target.value;\n    setNumPlayers(value);\n  }\n\n  const handleUserNameKeyDown = (e: React.KeyboardEvent<any>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n    }\n  }\n\n  const handleRoomNameKeyDown = (e: React.KeyboardEvent<any>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n    }\n  }\n\n  const createOrJoinSelected = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!userName || userName.trim() === \"\") {\n      alert(\"Enter a user name!\");\n      return;\n    }\n    \n    setSelected(true);\n  }\n\n  const createOrJoinRoom = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const socket = socketService.socket;\n    if (!socket) return;\n    if (!roomName || roomName.trim() === \"\") {\n      alert(\"Enter a room name!\");\n      return;\n    }\n\n    setJoining(true);\n\n    if (isCreator) {\n      const joined = await gameService\n      .createGameRoom(socket, roomName, userName, numPlayers)\n      .catch((err) => {\n        alert(err);\n      });\n\n    } else {\n      const joined = await gameService\n      .joinGameRoom(socket, roomName, userName)\n      .catch((err) => {\n        alert(err);\n      });\n\n      \n    }\n\n    setJoining(false);\n\n  }\n\n\n\n  return (\n    <div>\n      <div id='header'>\n        <h2>Pass 'Em</h2>\n        <h3>{userName}</h3>\n      </div>\n      \n      <div id='outer'>\n      {!isSelected ? (\n        <div className=\"inner\">\n          <form id='select' onSubmit={createOrJoinSelected} >\n            <div id='welcome'>\n              <h2>Welcome to Pass 'Em</h2>\n              <h3>A Free Online Alternative to Pass the Pigs</h3>\n            </div>\n            <div id='nameInput'>\n              <p>Enter your name</p>\n              <input type=\"text\" maxLength={15} placeholder=\"name\" value={userName}  required onChange={handleUserNameChange} onKeyDown={handleUserNameKeyDown}/>\n            </div>\n            <div id='createOrJoin'>\n              <p>Do you want to create or join a lobby?</p>\n              <div id='buttons'>\n                <button id='create' className='select' type=\"submit\" onClick={() => setCreator(true)}>Create Lobby</button>\n                <button id='join' className='select' type=\"submit\" onClick={() => setCreator(false)}>Join Lobby</button>\n              </div>\n            </div>\n            \n          </form>\n        </div>\n      ) : (\n        <div className=\"inner\">\n          <form id='start' onSubmit={createOrJoinRoom}>\n            <button id='goback' onClick={() => setSelected(false)} disabled={isJoining}> \n              Go back\n            </button>\n            <div id='roomInput'>\n              <p>Room Name:</p>\n              <input type=\"text\" required maxLength={15} placeholder=\"Room Name\" value={roomName} onChange={handleRoomNameChange} onKeyDown={handleRoomNameKeyDown}/>\n            </div>\n            {isCreator && \n              <div id='numPlayersInput'>\n                <p>Number of players (2-8):</p>\n                <input type=\"number\" required value={numPlayers} min='2' max='8' step='1' onChange={handleNumPlayersChange}/>\n            \n              </div>\n            }\n            <button id='start' className={isCreator ? \"createStart\" : \"createJoin\"} type=\"submit\" disabled={isJoining}>\n              {isCreator ? \n                (isJoining ? \"Creating...\" : \"Create\") :\n                (isJoining ? \"Joining...\" : \"Join\")}\n            </button>\n          </form>\n        </div>\n      )}\n      </div>\n    </div>\n    \n  );\n\n}","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/game/game.tsx",[],[],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/waitingRoom/waitingRoom.tsx",[],[],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameRoom/gameRoom.tsx",["102"],[],"import gameService from '../../../services/gameService';\nimport socketService from '../../../services/socketService';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentLobbyState } from '../gameStateType';\nimport { GameTable } from '../gameTable/gameTable';\nimport { GamePlayers } from '../gamePlayers/gamePlayers';\nimport { GameChat } from '../gameChat/gameChat';\nimport { GameControlBar } from '../gameControlBar/gameControlBar';\nimport './gameRoom.css';\n\n\n\nexport function GameRoom() {\n\n  const gameState = useRecoilValue(CurrentLobbyState)!;\n\n  return (\n    <div id='gameRoom'>\n      <div id='main'>\n        <div id='header'>\n          <h2>Pass 'Em</h2>\n          <h3>{gameState.scores[socketService.socket!.id].name}</h3>\n        </div>\n        <GameTable />\n        <GameControlBar />\n      </div>\n      <div id='sidebar'>\n        <GameChat />\n        <GamePlayers />\n      </div>\n      \n    </div>\n  );\n\n\n}","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameTable/gameTable.tsx",["103","104","105"],[],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gamePlayers/gamePlayers.tsx",["106"],[],"import { useRecoilValue } from 'recoil';\nimport { CurrentLobbyState } from '../gameStateType';\nimport './gamePlayers.css';\n\n\n\nexport function GamePlayers() {\n  const gameState = useRecoilValue(CurrentLobbyState)!;\n\n  let players = Object.entries(gameState.scores);\n\n  const isPlayerTurn = (index: number): boolean => {\n    const [key, value] = players[index]\n    return gameState.currentTurnPlayer === key;\n  }\n\n  return (\n    <div id='playersOuter'>\n      {players.map(([key, value], index) => (\n        <div className={isPlayerTurn(index) ? 'playerScoreTurn' : 'playerScore'} id={`playerScore-${index}`} key={key}>\n          <p>{value.name}</p>\n          <p className='scoreText'>{value.score}</p>\n        </div>\n      ))}\n    </div>\n  );\n}","/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameControlBar/gameControlBar.tsx",[],[],"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game/gameChat/gameChat.tsx",["107"],[],"import { useRecoilValue } from 'recoil';\nimport { CurrentLobbyState } from '../gameStateType';\nimport './gameChat.css';\n\n\n\nexport function GameChat() {\n  const gameState = useRecoilValue(CurrentLobbyState)!;\n\n  return (\n    <div id='chatOuter'>\n      <h4>Chat</h4>\n      <p>Coming soon...</p>\n    </div>\n  );\n}",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":15,"column":11,"nodeType":"112","messageId":"113","endLine":15,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":52,"column":6,"nodeType":"116","endLine":52,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":29,"column":1,"nodeType":"120","endLine":29,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":59,"column":1,"nodeType":"120","endLine":59,"endColumn":34},{"ruleId":"110","severity":1,"message":"121","line":67,"column":13,"nodeType":"112","messageId":"113","endLine":67,"endColumn":19},{"ruleId":"110","severity":1,"message":"121","line":74,"column":13,"nodeType":"112","messageId":"113","endLine":74,"endColumn":19},{"ruleId":"110","severity":1,"message":"122","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":19},{"ruleId":"110","severity":1,"message":"123","line":33,"column":17,"nodeType":"112","messageId":"113","endLine":33,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":79,"column":15,"nodeType":"126","endLine":79,"endColumn":64},{"ruleId":"124","severity":1,"message":"125","line":80,"column":15,"nodeType":"126","endLine":80,"endColumn":64},{"ruleId":"110","severity":1,"message":"123","line":13,"column":17,"nodeType":"112","messageId":"113","endLine":13,"endColumn":22},{"ruleId":"110","severity":1,"message":"127","line":8,"column":9,"nodeType":"112","messageId":"113","endLine":8,"endColumn":18},"no-new-object",["128"],"@typescript-eslint/no-unused-vars","'socket' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleGameUpdate'. Either include it or remove the dependency array.","ArrayExpression",["129"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'joined' is assigned a value but never used.","'gameService' is defined but never used.","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'gameState' is assigned a value but never used.","no-object-constructor",{"desc":"130","fix":"131"},"Update the dependencies array to be: [handleGameUpdate]",{"range":"132","text":"133"},[1282,1284],"[handleGameUpdate]"]