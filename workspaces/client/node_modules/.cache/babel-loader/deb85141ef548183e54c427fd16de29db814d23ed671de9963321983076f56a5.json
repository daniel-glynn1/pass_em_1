{"ast":null,"code":"var _jsxFileName = \"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport gameContext from '../gameContext';\nimport gameService from '../services/gameService';\nimport socketService from '../services/socketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialGameState = {\n  lobbyId: '',\n  isStarted: false,\n  isFinished: false,\n  numPlayers: 0,\n  currentPigIndex1: 0,\n  currentPigIndex2: 0,\n  currentRollScore: 0,\n  currentTurnPlayer: '',\n  currentTurnScore: 0,\n  scores: {}\n};\nexport function Game() {\n  _s();\n  const [gameState, setGameState] = useState(initialGameState);\n  const {\n    setPlayerTurn,\n    isPlayerTurn,\n    setGameStarted,\n    isGameStarted\n  } = useContext(gameContext);\n  const handleRollButton = () => {\n    if (socketService.socket) gameService.updateGame(socketService.socket, 'roll');\n  };\n  const handlePassButton = () => {\n    if (socketService.socket) gameService.updateGame(socketService.socket, 'pass');\n  };\n  const handleGameUpdate = () => {\n    if (socketService.socket) {\n      gameService.onGameUpdate(socketService.socket, newGameState => {\n        setGameState(newGameState);\n        const isTurn = newGameState.currentTurnPlayer === socketService.socket.id;\n        setPlayerTurn(isTurn);\n      });\n    }\n  };\n  const handleGameStart = () => {\n    if (socketService.socket) gameService.onStartGame(socketService.socket, () => {\n      setGameStarted(true);\n    });\n  };\n  useEffect(() => {\n    handleGameUpdate();\n    handleGameStart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isGameStarted && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for other players...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePassButton(),\n      children: \"Pass\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleRollButton(),\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pig 1: \", gameState.currentPigIndex1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pig 2: \", gameState.currentPigIndex2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Roll score: \", gameState.currentRollScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turn score: \", gameState.currentTurnScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [gameState.scores[gameState.currentTurnPlayer].name, \"'s turn, score: \", gameState.scores[gameState.currentTurnPlayer].score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(gameState.scores).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Key: \", key, \", Player: \", value.name, \", Score: \", value.score]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"8C3O7DrQ0NHr/4bGvlKKrWOEbUc=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useContext","useEffect","useState","gameContext","gameService","socketService","jsxDEV","_jsxDEV","initialGameState","lobbyId","isStarted","isFinished","numPlayers","currentPigIndex1","currentPigIndex2","currentRollScore","currentTurnPlayer","currentTurnScore","scores","Game","_s","gameState","setGameState","setPlayerTurn","isPlayerTurn","setGameStarted","isGameStarted","handleRollButton","socket","updateGame","handlePassButton","handleGameUpdate","onGameUpdate","newGameState","isTurn","id","handleGameStart","onStartGame","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","score","Object","entries","map","key","value","_c","$RefreshReg$"],"sources":["/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game.tsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport gameContext from '../gameContext';\nimport gameService from '../services/gameService';\nimport socketService from '../services/socketService';\nimport { ServerEvents } from \"../shared/types/serverEvents\";\nimport { ServerPayloads } from \"../shared/types/serverPayloads\";\n\nconst initialGameState: ServerPayloads[ServerEvents.LobbyState] = {\n  lobbyId: '',\n  isStarted: false,\n  isFinished: false,\n  numPlayers: 0,\n  currentPigIndex1: 0,\n  currentPigIndex2: 0,\n  currentRollScore: 0,\n  currentTurnPlayer: '',\n  currentTurnScore: 0,\n  scores: {}\n}\n\nexport function Game() {\n\n  const [gameState, setGameState] = useState(initialGameState)\n\n  const { setPlayerTurn, isPlayerTurn, setGameStarted, isGameStarted } = useContext(gameContext);\n\n  const handleRollButton = () => {\n    if (socketService.socket)\n      gameService.updateGame(socketService.socket, 'roll');\n  }\n\n  const handlePassButton = () => {\n    if (socketService.socket)\n      gameService.updateGame(socketService.socket, 'pass');\n  }\n\n  const handleGameUpdate = () => {\n    if (socketService.socket) {\n      gameService.onGameUpdate(socketService.socket, (newGameState) => {\n        setGameState(newGameState);\n        const isTurn = newGameState.currentTurnPlayer === socketService.socket!.id\n        setPlayerTurn(isTurn);\n      });\n    }\n  }\n\n  const handleGameStart = () => {\n    if (socketService.socket)\n      gameService.onStartGame(socketService.socket, () => {\n        setGameStarted(true);\n      });\n  }\n\n  useEffect(() => {\n    handleGameUpdate();\n    handleGameStart();\n  }, []);\n\n  return (\n    \n    <div>\n      {!isGameStarted && <h2>Waiting for other players...</h2>}\n      <button onClick={() => handlePassButton()}>Pass</button>\n      <button onClick={() => handleRollButton()}>Roll</button>\n      <div>\n        <p>Pig 1: {gameState.currentPigIndex1}</p>\n        <p>Pig 2: {gameState.currentPigIndex2}</p>\n        <p>Roll score: {gameState.currentRollScore}</p>\n        <p>Turn score: {gameState.currentTurnScore}</p>\n        <p>{gameState.scores[gameState.currentTurnPlayer].name}'s turn, \n        score: {gameState.scores[gameState.currentTurnPlayer].score}</p>\n\n      </div>\n      <div>\n        {Object.entries(gameState.scores).map(([key, value]) => (\n          <div key={key}>\n            Key: {key}, Player: {value.name}, Score: {value.score}\n          </div>\n        ))}\n      </div>\n      \n    </div>\n  );\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}