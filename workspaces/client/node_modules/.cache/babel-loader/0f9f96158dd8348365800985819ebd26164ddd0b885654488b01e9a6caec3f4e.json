{"ast":null,"code":"var _jsxFileName = \"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport gameService from '../services/gameService';\nimport socketService from '../services/socketService';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentLobbyState } from '../components/gameState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Game() {\n  _s();\n  const gameState = useRecoilValue(CurrentLobbyState);\n  let isMyTurn = socketService.socket && gameState.currentTurnPlayer === socketService.socket.id;\n  const handleRollButton = () => {\n    if (socketService.socket) gameService.updateGame(socketService.socket, 'roll');\n  };\n  const handlePassButton = () => {\n    if (socketService.socket) gameService.updateGame(socketService.socket, 'pass');\n  };\n  const handleGameMessage = () => {\n    if (socketService.socket) {\n      gameService.onGameMessage(socketService.socket, data => {\n        alert(data.message);\n      });\n    }\n  };\n  useEffect(() => {\n    handleGameMessage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !gameState.isStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room: \", gameState.lobbyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Waiting for other players...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePassButton(),\n        disabled: gameState.isFinished,\n        children: \"Pass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRollButton(),\n        disabled: !gameState.isStarted || gameState.isFinished,\n        children: \"Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Room: \", gameState.lobbyName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pig 1: \", gameState.currentPigIndex1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pig 2: \", gameState.currentPigIndex2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Roll score: \", gameState.currentRollScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Turn score: \", gameState.currentTurnScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [gameState.scores[gameState.currentTurnPlayer].name, \"'s turn, score: \", gameState.scores[gameState.currentTurnPlayer].score, \", id: \", gameState.currentTurnPlayer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You are: \", socketService.socket.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(gameState.scores).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Key: \", key, \", Player: \", value.name, \", Score: \", value.score]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"VtWyT5RF1p67HEGIsF0KfWDl99w=\", false, function () {\n  return [useRecoilValue];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","gameService","socketService","useRecoilValue","CurrentLobbyState","jsxDEV","_jsxDEV","Game","_s","gameState","isMyTurn","socket","currentTurnPlayer","id","handleRollButton","updateGame","handlePassButton","handleGameMessage","onGameMessage","data","alert","message","children","isStarted","lobbyName","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","isFinished","currentPigIndex1","currentPigIndex2","currentRollScore","currentTurnScore","scores","name","score","Object","entries","map","key","value","_c","$RefreshReg$"],"sources":["/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game.tsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport gameService from '../services/gameService';\nimport socketService from '../services/socketService';\nimport { ServerEvents } from \"../shared/types/serverEvents\";\nimport { ServerPayloads } from \"../shared/types/serverPayloads\";\nimport { useRecoilValue } from 'recoil';\nimport { CurrentLobbyState } from '../components/gameState';\n\n\nexport function Game() {\n\n  const gameState = useRecoilValue(CurrentLobbyState)!;\n\n  let isMyTurn = socketService.socket && gameState.currentTurnPlayer === socketService.socket.id;\n\n  const handleRollButton = () => {\n    if (socketService.socket)\n      gameService.updateGame(socketService.socket, 'roll');\n  }\n\n  const handlePassButton = () => {\n    if (socketService.socket)\n      gameService.updateGame(socketService.socket, 'pass');\n  }\n\n  const handleGameMessage = () => {\n    if (socketService.socket) {\n      gameService.onGameMessage(socketService.socket, (data) => {\n        alert(data.message);\n      });\n    }\n  }\n\n  useEffect(() => {\n    handleGameMessage();\n  }, []);\n\n  return (\n    \n    <div>\n      {!gameState.isStarted ? (\n          <div>\n            <h2>Room: {gameState.lobbyName}</h2>\n            <h2>Waiting for other players...</h2>\n          </div>\n        ) : (\n          <div>\n            <button \n              onClick={() => handlePassButton()} \n              disabled={gameState.isFinished}\n            >\n              Pass\n            </button>\n            <button \n              onClick={() => handleRollButton()} \n              disabled={!gameState.isStarted || gameState.isFinished}\n            >\n              Roll\n            </button>\n            <div>\n              <p>Room: {gameState.lobbyName}</p>\n              <p>Pig 1: {gameState.currentPigIndex1}</p>\n              <p>Pig 2: {gameState.currentPigIndex2}</p>\n              <p>Roll score: {gameState.currentRollScore}</p>\n              <p>Turn score: {gameState.currentTurnScore}</p>\n              <p>{gameState.scores[gameState.currentTurnPlayer].name}'s turn, \n              score: {gameState.scores[gameState.currentTurnPlayer].score}, \n              id: {gameState.currentTurnPlayer}</p>\n              <p>You are: {socketService.socket!.id}</p>\n\n            </div>\n            <div>\n              {Object.entries(gameState.scores).map(([key, value]) => (\n                <div key={key}>\n                  Key: {key}, Player: {value.name}, Score: {value.score}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      \n    </div>\n  );\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}