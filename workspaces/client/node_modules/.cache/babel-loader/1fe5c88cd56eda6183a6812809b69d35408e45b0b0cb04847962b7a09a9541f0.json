{"ast":null,"code":"var _jsxFileName = \"/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport gameService from '../services/gameService';\nimport socketService from '../services/socketService';\nimport { useRecoilValue } from 'recoil';\nimport { CurrentLobbyState } from '../components/gameState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Game() {\n  _s();\n  const gameState = useRecoilValue(CurrentLobbyState);\n  const handleRollButton = () => {\n    if (socketService.socket) gameService.updateGame(socketService.socket, 'roll');\n  };\n  const handlePassButton = () => {\n    if (socketService.socket) gameService.updateGame(socketService.socket, 'pass');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !gameState.isStarted ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for other players...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePassButton(),\n        children: \"Pass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRollButton(),\n        children: \"Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pig 1: \", gameState.currentPigIndex1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pig 2: \", gameState.currentPigIndex2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Roll score: \", gameState.currentRollScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Turn score: \", gameState.currentTurnScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [gameState.scores[gameState.currentTurnPlayer].name, \"'s turn, score: \", gameState.scores[gameState.currentTurnPlayer].score, \", id: \", gameState.currentTurnPlayer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You are: \", socketService.socket.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(gameState.scores).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Key: \", key, \", Player: \", value.name, \", Score: \", value.score]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"wPt1njVJmiJoDKV0uRkjcvp7eFI=\", false, function () {\n  return [useRecoilValue];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","gameService","socketService","useRecoilValue","CurrentLobbyState","jsxDEV","_jsxDEV","Game","_s","gameState","handleRollButton","socket","updateGame","handlePassButton","children","isStarted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","currentPigIndex1","currentPigIndex2","currentRollScore","currentTurnScore","scores","currentTurnPlayer","name","score","id","Object","entries","map","key","value","_c","$RefreshReg$"],"sources":["/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/components/game.tsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport gameService from '../services/gameService';\nimport socketService from '../services/socketService';\nimport { ServerEvents } from \"../shared/types/serverEvents\";\nimport { ServerPayloads } from \"../shared/types/serverPayloads\";\nimport { useRecoilValue } from 'recoil';\nimport { CurrentLobbyState } from '../components/gameState';\n\n\nexport function Game() {\n\n  const gameState = useRecoilValue(CurrentLobbyState)!;\n\n  const handleRollButton = () => {\n    if (socketService.socket)\n      gameService.updateGame(socketService.socket, 'roll');\n  }\n\n  const handlePassButton = () => {\n    if (socketService.socket)\n      gameService.updateGame(socketService.socket, 'pass');\n  }\n\n  return (\n    \n    <div>\n      {!gameState.isStarted ? \n        (<h2>Waiting for other players...</h2>) :\n        (\n        <div>\n          <button onClick={() => handlePassButton()}>Pass</button>\n          <button onClick={() => handleRollButton()}>Roll</button>\n          <div>\n            <p>Pig 1: {gameState.currentPigIndex1}</p>\n            <p>Pig 2: {gameState.currentPigIndex2}</p>\n            <p>Roll score: {gameState.currentRollScore}</p>\n            <p>Turn score: {gameState.currentTurnScore}</p>\n            <p>{gameState.scores[gameState.currentTurnPlayer].name}'s turn, \n            score: {gameState.scores[gameState.currentTurnPlayer].score}, \n            id: {gameState.currentTurnPlayer}</p>\n            <p>You are: {socketService.socket.id}</p>\n\n          </div>\n          <div>\n            {Object.entries(gameState.scores).map(([key, value]) => (\n              <div key={key}>\n                Key: {key}, Player: {value.name}, Score: {value.score}\n              </div>\n            ))}\n          </div>\n        </div>\n        )}\n      \n    </div>\n  );\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}