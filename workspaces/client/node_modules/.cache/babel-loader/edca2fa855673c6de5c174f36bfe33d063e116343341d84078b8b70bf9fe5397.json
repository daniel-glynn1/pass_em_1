{"ast":null,"code":"import { ClientEvents } from \"../shared/types/clientEvents\";\nimport { ServerEvents } from \"../shared/types/serverEvents\";\nimport { SocketExceptions } from \"../shared/types/socketExceptions\";\nclass GameService {\n  async createGameRoom(socket, roomId) {\n    return new Promise((rs, rj) => {\n      socket.emit(ClientEvents.LobbyCreate, {\n        roomId: roomId\n      });\n      socket.on(ServerEvents.LobbyCreated, () => {\n        rs(true);\n      });\n      socket.on(SocketExceptions.LobbyError, ({\n        error\n      }) => rj(error));\n    });\n  }\n  async joinGameRoom(socket, roomId) {\n    return new Promise((rs, rj) => {\n      socket.emit(ClientEvents.LobbyJoin, {\n        roomId: roomId\n      });\n      socket.on(ServerEvents.LobbyJoined, () => {\n        rs(true);\n      });\n      socket.on(SocketExceptions.LobbyError, ({\n        error\n      }) => rj(error));\n    });\n  }\n  async updateGame(socket, choice) {\n    socket.emit(ClientEvents.GameUpdate, {\n      choice: choice\n    });\n  }\n  async onGameUpdate(socket, listener) {\n    socket.on(ServerEvents.LobbyState, data => {\n      listener(data);\n    });\n  }\n  async onGameMessage(socket, listener) {\n    socket.on(ServerEvents.GameMessage, data => {\n      listener(data);\n    });\n  }\n  async onStartGame(socket, listener) {\n    socket.on(ServerEvents.GameStarted, listener);\n  }\n}\nexport default new GameService();","map":{"version":3,"names":["ClientEvents","ServerEvents","SocketExceptions","GameService","createGameRoom","socket","roomId","Promise","rs","rj","emit","LobbyCreate","on","LobbyCreated","LobbyError","error","joinGameRoom","LobbyJoin","LobbyJoined","updateGame","choice","GameUpdate","onGameUpdate","listener","LobbyState","data","onGameMessage","GameMessage","onStartGame","GameStarted"],"sources":["/Users/dcglynn/WebApps/pass_em_1/workspaces/client/src/services/gameService.ts"],"sourcesContent":["import { Socket } from \"socket.io-client\";\nimport { ClientEvents } from \"../shared/types/clientEvents\";\nimport { ServerEvents } from \"../shared/types/serverEvents\";\nimport { ServerPayloads } from \"../shared/types/serverPayloads\";\nimport { SocketExceptions } from \"../shared/types/socketExceptions\";\n\n\n\n\n\nclass GameService {\n  public async createGameRoom(socket: Socket, roomId: string): Promise<boolean> {\n    return new Promise((rs, rj) => {\n      socket.emit(ClientEvents.LobbyCreate, { roomId: roomId });\n      socket.on(ServerEvents.LobbyCreated, () => {\n        rs(true);\n      });\n      socket.on(SocketExceptions.LobbyError, ({ error }) => rj(error));\n    });\n  }\n\n  public async joinGameRoom(socket: Socket, roomId: string): Promise<boolean> {\n    return new Promise((rs, rj) => {\n      socket.emit(ClientEvents.LobbyJoin, { roomId: roomId });\n      socket.on(ServerEvents.LobbyJoined, () => {\n        rs(true);\n      });\n      socket.on(SocketExceptions.LobbyError, ({ error }) => rj(error));\n    });\n  }\n\n  public async updateGame(socket: Socket, choice: string){\n    socket.emit(ClientEvents.GameUpdate, { choice: choice });\n  }\n\n  public async onGameUpdate(socket: Socket, listener: (data: ServerPayloads[ServerEvents.LobbyState]) => void) {\n    socket.on(ServerEvents.LobbyState, ( data ) => {\n      listener(data);\n    });\n  }\n\n  public async onGameMessage(socket: Socket, listener: (data: ServerPayloads[ServerEvents.GameMessage]) => void) {\n    socket.on(ServerEvents.GameMessage, ( data ) => {\n      listener(data);\n    });\n  }\n\n\n  public async onStartGame(socket: Socket, listener: () => void) {\n    socket.on(ServerEvents.GameStarted, listener);\n  }\n\n}\n\n\nexport default new GameService();"],"mappings":"AACA,SAASA,YAAY,QAAQ,8BAA8B;AAC3D,SAASC,YAAY,QAAQ,8BAA8B;AAE3D,SAASC,gBAAgB,QAAQ,kCAAkC;AAMnE,MAAMC,WAAW,CAAC;EAChB,MAAaC,cAAcA,CAACC,MAAc,EAAEC,MAAc,EAAoB;IAC5E,OAAO,IAAIC,OAAO,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAK;MAC7BJ,MAAM,CAACK,IAAI,CAACV,YAAY,CAACW,WAAW,EAAE;QAAEL,MAAM,EAAEA;MAAO,CAAC,CAAC;MACzDD,MAAM,CAACO,EAAE,CAACX,YAAY,CAACY,YAAY,EAAE,MAAM;QACzCL,EAAE,CAAC,IAAI,CAAC;MACV,CAAC,CAAC;MACFH,MAAM,CAACO,EAAE,CAACV,gBAAgB,CAACY,UAAU,EAAE,CAAC;QAAEC;MAAM,CAAC,KAAKN,EAAE,CAACM,KAAK,CAAC,CAAC;IAClE,CAAC,CAAC;EACJ;EAEA,MAAaC,YAAYA,CAACX,MAAc,EAAEC,MAAc,EAAoB;IAC1E,OAAO,IAAIC,OAAO,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAK;MAC7BJ,MAAM,CAACK,IAAI,CAACV,YAAY,CAACiB,SAAS,EAAE;QAAEX,MAAM,EAAEA;MAAO,CAAC,CAAC;MACvDD,MAAM,CAACO,EAAE,CAACX,YAAY,CAACiB,WAAW,EAAE,MAAM;QACxCV,EAAE,CAAC,IAAI,CAAC;MACV,CAAC,CAAC;MACFH,MAAM,CAACO,EAAE,CAACV,gBAAgB,CAACY,UAAU,EAAE,CAAC;QAAEC;MAAM,CAAC,KAAKN,EAAE,CAACM,KAAK,CAAC,CAAC;IAClE,CAAC,CAAC;EACJ;EAEA,MAAaI,UAAUA,CAACd,MAAc,EAAEe,MAAc,EAAC;IACrDf,MAAM,CAACK,IAAI,CAACV,YAAY,CAACqB,UAAU,EAAE;MAAED,MAAM,EAAEA;IAAO,CAAC,CAAC;EAC1D;EAEA,MAAaE,YAAYA,CAACjB,MAAc,EAAEkB,QAAiE,EAAE;IAC3GlB,MAAM,CAACO,EAAE,CAACX,YAAY,CAACuB,UAAU,EAAIC,IAAI,IAAM;MAC7CF,QAAQ,CAACE,IAAI,CAAC;IAChB,CAAC,CAAC;EACJ;EAEA,MAAaC,aAAaA,CAACrB,MAAc,EAAEkB,QAAkE,EAAE;IAC7GlB,MAAM,CAACO,EAAE,CAACX,YAAY,CAAC0B,WAAW,EAAIF,IAAI,IAAM;MAC9CF,QAAQ,CAACE,IAAI,CAAC;IAChB,CAAC,CAAC;EACJ;EAGA,MAAaG,WAAWA,CAACvB,MAAc,EAAEkB,QAAoB,EAAE;IAC7DlB,MAAM,CAACO,EAAE,CAACX,YAAY,CAAC4B,WAAW,EAAEN,QAAQ,CAAC;EAC/C;AAEF;AAGA,eAAe,IAAIpB,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}